{"version":3,"sources":["pages/Nav.js","Meta.js","pages/Page1.js","pages/Page2.js","pages/Sidebar.js","pages/Page3.js","pages/Page4.js","pages/Home.js","pages/Notfound.js","pages/Postdetails.js","myroute.js","App.js","serviceWorker.js","index.js"],"names":["Nav","to","Component","Meta","state","title","description","apiurl","this","props","slug","axios","get","then","response","metadata","data","meta_title","meta_desc","setState","catch","error","console","log","Helmet","name","content","Page1","posts","isloaded","alert","postsblocks","map","post","i","posturl","id","key","Page2","interval","counter","cnt","setInterval","clearInterval","Sidebar","albums","splice","album","Page3","Page4","Home","Fragment","Notfound","Postdetails","match","postid","params","post_id","post_title","post_details","postdata","body","charSet","Myroute","exact","path","component","App","basename","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.500d1047.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Nav extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    <li>\r\n                        <Link to=\"/\">Home</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/page1\">Page 1</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/page2\">Page 2</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/page3\">Page 3</Link>\r\n                    </li>\r\n                    <li>\r\n                        <Link to=\"/page4\">Page 4</Link>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nclass Meta extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state={\r\n            title: '',\r\n            description: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let apiurl = 'https://mathsonline.mptprime.com/testmails?metaslug=' + this.props.slug;\r\n\r\n        axios.get(apiurl).then((response)=>{\r\n\r\n            let metadata = response.data;\r\n\r\n            let meta_title = metadata.title;\r\n            let meta_desc = metadata.description;\r\n\r\n            this.setState({\r\n\r\n                title: meta_title,\r\n                description: meta_desc\r\n            })\r\n\r\n        }).catch((error)=>{\r\n            \r\n            console.log(error);\r\n            \r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <Helmet>\r\n                    <title>{this.state.title}</title>\r\n                    <meta name=\"description\" content={this.state.description} />\r\n                </Helmet>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Meta;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport Meta from './../Meta';\r\n\r\nclass Page1 extends Component {\r\n\r\n    constructor(){\r\n\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            'posts': [],\r\n            'isloaded': false\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        const apiurl = 'https://jsonplaceholder.typicode.com/posts';\r\n\r\n        axios.get(apiurl)\r\n             .then((response) => {                \r\n                 // console.log(response);\r\n                 let posts = response.data;\r\n                 this.setState({ posts: posts, isloaded: true });\r\n             })\r\n             .catch((error) => {\r\n                 console.log(error);\r\n                 alert('Something went wrong!');\r\n             })\r\n    }\r\n\r\n    render() {\r\n\r\n        const postsblocks = this.state.posts.map((post,i) => {\r\n\r\n            var posturl = '/post/' + post.id;\r\n\r\n            return (\r\n\r\n                <li key={i}>\r\n                    <Link to={posturl}>{post.title}</Link>\r\n                </li>\r\n            )\r\n        });\r\n\r\n        const isloaded = this.state.isloaded;\r\n\r\n        const output = () => {\r\n\r\n            if(!isloaded){\r\n\r\n                return <p>Please wait...</p>\r\n            }\r\n            else{\r\n\r\n                return <ol>{postsblocks}</ol>\r\n            }\r\n        }\r\n\r\n        console.log(isloaded);\r\n\r\n        return (\r\n            <div>\r\n\r\n                <Meta slug=\"page_1\" />\r\n\r\n                {output()}\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page1;","import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport Meta from './../Meta';\r\n\r\nclass Page2 extends Component {\r\n\r\n    interval = '';\r\n\r\n    constructor(){\r\n\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            counter: 10\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let cnt = this.state.counter;\r\n\r\n        this.interval = setInterval(() => {\r\n\r\n            cnt = cnt - 1;\r\n\r\n            if(cnt === 0)   clearInterval(this.interval);\r\n\r\n            this.setState({ counter: cnt })\r\n            \r\n        }, 1000);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n        clearInterval(this.interval);\r\n    }\r\n\r\n    render() {\r\n\r\n        let cnt = this.state.counter;\r\n\r\n        if(cnt === 0){\r\n\r\n            return <Redirect to=\"/page4\" />\r\n        }\r\n\r\n        return (\r\n\r\n            <>\r\n                \r\n                <Meta slug=\"page_2\" />\r\n\r\n                <div>\r\n                    <h1>{cnt}</h1>\r\n                </div>\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page2;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\n\r\nclass Sidebar extends Component {\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.state = {\r\n\r\n            albums: []\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        const apiurl = 'https://jsonplaceholder.typicode.com/albums';\r\n\r\n        axios.get(apiurl).then((response) => {\r\n\r\n            var albums = response.data.splice(0,5);\r\n\r\n            this.setState({ albums: albums });\r\n\r\n        }).catch((error) => {\r\n\r\n            console.log(error);\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const albums = this.state.albums.map((album,i) => {\r\n\r\n            return <li key={i}>{album.title}</li>\r\n        })\r\n\r\n        return (\r\n            \r\n            <>\r\n            \r\n                <ul>\r\n                    {albums}\r\n                </ul>\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Sidebar;","import React, { Component } from 'react';\r\nimport Meta from './../Meta';\r\nimport Sidebar from './Sidebar';\r\n\r\nclass Page3 extends Component {\r\n    render() {\r\n        return (\r\n\r\n            <>\r\n            \r\n                <Meta slug=\"page_3\" />\r\n\r\n                <div>\r\n                    <h1>Page 3</h1>\r\n\r\n                    <Sidebar />\r\n\r\n                </div>\r\n\r\n            </>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Page3;","import React, { Component } from 'react';\r\nimport Meta from './../Meta';\r\n\r\nclass Page4 extends Component {\r\n    render() {\r\n        return (\r\n            \r\n            <>\r\n            \r\n                <Meta slug=\"page_4\" />\r\n\r\n                <div>\r\n                    <h1>Page 4</h1>\r\n                </div>\r\n\r\n            </>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Page4;","import React, { Component } from 'react';\r\nimport Meta from './../Meta';\r\n\r\nclass Home extends Component {\r\n    render() {\r\n\r\n        return (\r\n\r\n            <React.Fragment>\r\n\r\n                <Meta slug=\"home\" />\r\n\r\n                <div>\r\n                    <h1>Home</h1>\r\n                </div>\r\n\r\n            </React.Fragment>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\n\r\nclass Notfound extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>404 Not Found</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Notfound;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nclass Postdetails extends Component {\r\n\r\n    constructor({match}){\r\n\r\n        super();\r\n\r\n        let postid = match.params.id;\r\n\r\n        this.state = {\r\n\r\n            post_id: postid,\r\n            post_title: '',\r\n            post_details: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n\r\n        let apiurl = 'https://jsonplaceholder.typicode.com/posts/' + this.state.post_id;\r\n\r\n        axios.get(apiurl).then((response) => {\r\n\r\n            let postdata = response.data;\r\n            let post_title = postdata.title;\r\n            let post_details = postdata.body;\r\n\r\n            this.setState({ post_title: post_title, post_details: post_details });\r\n\r\n        }).catch((error) => {\r\n\r\n            alert('Something went wrong!');\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <>\r\n            \r\n                <Helmet>\r\n                    <title>{this.state.post_title}</title>\r\n                    <meta charSet=\"utf-8\" />\r\n                    <meta name=\"description\" content={this.state.post_details} />\r\n                </Helmet>\r\n\r\n                <div>\r\n                    <h1>{this.state.post_title}</h1>\r\n                    <p>{this.state.post_details}</p>\r\n                </div>\r\n\r\n            </>\r\n            \r\n        );\r\n    }\r\n}\r\n\r\nexport default Postdetails;","import React, { Component } from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport Page1 from './pages/Page1';\r\nimport Page2 from './pages/Page2';\r\nimport Page3 from './pages/Page3';\r\nimport Page4 from './pages/Page4';\r\nimport Home from './pages/Home';\r\nimport Notfound from './pages/Notfound';\r\nimport Postdetails from './pages/Postdetails';\r\n\r\nclass Myroute extends Component {\r\n    render() {\r\n        return (            \r\n            <Switch>\r\n                <Route exact path=\"/\" component={Home}></Route>\r\n                <Route path=\"/page1\" component={Page1}></Route>\r\n                <Route path=\"/page2\" component={Page2}></Route>\r\n                <Route path=\"/page3\" component={Page3}></Route>\r\n                <Route path=\"/page4\" component={Page4}></Route>\r\n                <Route exact path=\"/post/:id\" component={Postdetails} />\r\n                <Route component={Notfound}/>\r\n            </Switch>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Myroute;","import React from 'react';\nimport './App.css';\nimport Nav from './pages/Nav';\nimport Myroute from './myroute';\nimport { BrowserRouter } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <BrowserRouter basename=\"/test-react-app-1\">\n      <Nav />\n      <Myroute />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n/* ReactDOM.render(\n  <App />,\n  document.getElementById('root')\n); */\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}